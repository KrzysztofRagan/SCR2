Program: 
SS#include <stdio.h>
#include <unistd.h>

int main() 
{
    int a=0;

    while(a)  
    {
        a++;
        printf( "%d \n", a);
        sleep(1);
    }
}


Następnie wpisano program top w terminalu:


krzysztofragan@krzysztofragan-VirtualBox:~$ top

top - 19:29:11 up 25 min,  1 user,  load average: 0,03, 0,05, 0,07
Zadania:razem: 143, działających:   1, śpiących: 142, zatrzymanych:   0, zombie:
%CPU:  12,2 uż,  0,0 sy,  0,0 ni, 93,8 be,  0,0 io,  0,0 hi,  0,0 si,  0,0 sk
MiB RAM :   1483,8 razem,    359,6 wolne,    483,0 użyte,    641,2 buf/cache
MiB Swap:    684,6 razem,    684,6 wolne,      0,0 użyte.    825,7 dost. RAM 

    PID UŻYTK.    PR  NI    WIRT    REZ    WSP S  %CPU  %PAM     CZAS+ KOMENDA  
   1750 krzyszt+  20   0   14484   3784   3248 R   6,2   0,2   0:00.01 top      
   1751 krzyszt+  20   0   25290   9303   5623 R   7,1   0,1   0:00.02 a.out
      1 root      20   0  101888  11340   8380 S   0,0   0,7   0:03.85 systemd  
      2 root      20   0       0      0      0 S   0,0   0,0   0:00.00 kthreadd 
      3 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 rcu_gp   
      4 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 rcu_par+ 
      6 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 kworker+ 
      9 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 mm_perc+ 
     10 root      20   0       0      0      0 S   0,0   0,0   0:00.11 ksoftir+ 
     11 root      20   0       0      0      0 I   0,0   0,0   0:00.26 rcu_sch+ 
     12 root      rt   0       0      0      0 S   0,0   0,0   0:00.02 migrati+ 
     13 root     -51   0       0      0      0 S   0,0   0,0   0:00.00 idle_in+ 
 
----------------------------------------------------------------------------------

Nstępnie uruchomiono program z funkcją sleep(1)

krzysztofragan@krzysztofragan-VirtualBox:~$ top

top - 19:48:43 up 45 min,  1 user,  load average: 0,00, 0,01, 0,00
Zadania:razem: 141, działających:   1, śpiących: 140, zatrzymanych:   0, zombie:
%CPU: 11,8 uż,  5,9 sy,  0,0 ni, 82,4 be,  0,0 io,  0,0 hi,  0,0 si,  0,0 sk
MiB RAM :   1483,8 razem,    358,2 wolne,    483,9 użyte,    641,7 buf/cache
MiB Swap:    684,6 razem,    684,6 wolne,      0,0 użyte.    824,8 dost. RAM 

    PID UŻYTK.    PR  NI    WIRT    REZ    WSP S  %CPU  %PAM     CZAS+ KOMENDA  
    780 root      20   0  278280  79300  37788 S   6,2   5,2   0:22.33 Xorg     
      1 root      20   0  101888  11340   8380 S   0,0   0,7   0:03.86 systemd  
      2 root      20   0       0      0      0 S   0,0   0,0   0:00.00 kthreadd 
      3 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 rcu_gp   
      4 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 rcu_par+ 
      6 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 kworker+ 
      9 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 mm_perc+ 
     10 root      20   0       0      0      0 S   0,0   0,0   0:00.11 ksoftir+ 
     11 root      20   0       0      0      0 I   0,0   0,0   0:00.62 rcu_sch+ 
     12 root      rt   0       0      0      0 S   0,0   0,0   0:00.03 migrati+ 
     13 root     -51   0       0      0      0 S   0,0   0,0   0:00.00 idle_in+ 
     14 root      20   0       0      0      0 S   0,0   0,0   0:00.00 cpuhp/0  
     15 root      20   0       0      0      0 S   0,0   0,0   0:00.00 kdevtmp+ 
     16 root       0 -20       0      0      0 I   0,0   0,0   0:00.00 netns    
     17 root      20   0       0      0      0 S   0,0   0,0   0:00.00 rcu_tas+ 
     18 root      20   0       0      0      0 S   0,0   0,0   0:00.00 kauditd  
     19 root      20   0       0      0      0 S   0,0   0,0   0:00.00 khungta+ 
     .
     .
     .
     .
     890 krzyszt+  20   0   25290   9303   5623 S   0,0   0,1   0:00.02 a.out

----------------------------------------------------------------------------------------

Kiedy funkcja sleep(1) zostaje dodana do programu, to program nie jest już na samej górze programów, które wykorzystują CPU

 
